import resolve from 'rollup-plugin-node-resolve';
import babel from 'rollup-plugin-babel';
import postcss from 'rollup-plugin-postcss';
import autoprefixer from 'autoprefixer';

function external(id) {
  // Make all import external except
  // - relative path
  // - absolute paths (generated by @babel/plugin-transform-runtime
  //   for helper modules)
  return !['.', '/'].includes(id[0]);
}

const plugins = [
  postcss({
    modules: true,
    plugins: [autoprefixer]
  }),
  babel({
    exclude: 'node_modules/**',
    extensions: ['js', 'jsx', 'svg'],

    // By default rollup-plugin-babel deduplicates runtime helpers
    // inserted by Babel. babel-preset-react-app uses
    // @babel/plugin-transform-runtime which already takes care of
    // this.
    runtimeHelpers: true
  }),
  resolve()
];

const ignoreJSXWarning = {
  onwarn: function(warning, warn) {
    // Ignore noisy warning
    // https://github.com/babel/babel/issues/9149
    if (warning.code === 'THIS_IS_UNDEFINED') { return; }
    warn(warning);
  }
};

export default [
  {
    input: 'src/scrolled/editor/index.js',
    output: {
      file: 'scrolled-editor.js',
      format: 'esm',
    },
    external,
    plugins
  },
  {
    input: 'src/scrolled/frontend/index.js',
    output: {
      file: 'scrolled-frontend.js',
      format: 'esm',
    },
    external,
    plugins,
    ...ignoreJSXWarning
  }
];
